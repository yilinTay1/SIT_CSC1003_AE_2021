/**************************************************************/
/* Input_priorProbability.c */
/* Tay Yi Lin  2103154@sit.singaporetech.edu.sg              */
/*************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

int readingFile(void);       // function Prototypes
void priorProbability(void); // function Prototypes

/* global variable declaration */
// split into training set and testing set
double arrayTraining[80][10];
double arrayTesting[20][10];

// further split training set and testing set into feature and output set
double trainingFeature[80][9];
double testingFeature[20][9];

double trainingOutput[80][1];
double testingOutput[20][1];

// prior probability
double priorProbability_Normal = 0;
double priorProbability_Altered = 0;

int yAlteredCounter = 0; //Altered Diagnosis Counter
int yNormalCounter = 0;  //Normal Diagnosis Counter

void main(void)
{
    /* print heading */
    printf("\nInput_priorProbability.c \n");
    printf("**************************************************************");

    /* Input */
    readingFile();

    /* calculate prior probability */
    priorProbability();
    printf("\nBased on the training dataset, P(Y = Normal) prior probability: %f \n", priorProbability_Normal);
    printf("Based on the training dataset, P(Y = Altered) prior probability: %f \n", priorProbability_Altered);
}

/**************************************************************/
/* void readingFile(void); */
/* Tay Yi Lin  2103154@sit.singaporetech.edu.sg              */
/*************************************************************/
int readingFile(void)
{
    // read from a text file
    char *filename[100];
    puts("\nEnter the filename of .txt dataset file to be opened: ");
    gets((char *)filename);
    FILE *fp = fopen((const char *)filename, "r");

    if (fp == NULL)
    {
        printf("\nError: File entered could not be found - %s", filename);
        exit(1);
    }

    // verify file extension to be .txt
    char *fileExtension = strrchr((const char *)filename, '.'); //strrchr locates the last occurrence of a character in a string. 
    if (strcmp(fileExtension +1, "txt") !=0)
    {
        printf("\nError: File of wrong extension - .%s \nPlease enter a file with .txt extension!\n", fileExtension +1);
        exit(2);
    }
    
    printf("\nSuccess: Opened dataset file - %s \n", filename);

    int row_Count = 0;
    int row_Count2 = 0;
    int col_Count = 0;

    // reading line by line
    const unsigned MAX_LENGTH = 100;
    char buffer[MAX_LENGTH];

    while (fgets(buffer, MAX_LENGTH, fp)) //reads a line from the specified stream and stores it into the string- buffer.
    {
        // extract the first token
        char *token = strtok(buffer, ","); //breaks string-buffer into a series of tokens using the delimiter-",".

        // loop through the string to extract all other tokens
        while (token != NULL)
        {
            col_Count = col_Count % 10;
            // training set
            if (row_Count < 80)
            {
                arrayTraining[row_Count][col_Count] = atof(token);

                // further split training set into feature and output set
                if (col_Count < 9)
                {
                    trainingFeature[row_Count][col_Count] = atof(token);
                }
                else if (col_Count == 9)
                {
                    trainingOutput[row_Count][0] = atof(token);
                }
            }
            // testing set
            if (row_Count >= 80)
            {
                arrayTesting[row_Count2][col_Count] = atof(token);

                // further split testing set into feature and output set
                if (col_Count < 9)
                {
                    testingFeature[row_Count2][col_Count] = atof(token);
                }
                else if (col_Count == 9)
                {
                    testingOutput[row_Count2][0] = atof(token);
                }
            }
            col_Count += 1;
            token = strtok(NULL, ","); //strtok modifies the original string. It puts NULL characters ('\0') at the delimiter position after every call to strtok so that tokens can be tracked.
        }

        if (row_Count >= 80)
        {
            row_Count2 += 1;
        }
        row_Count += 1;
    }

    /* close the file */
    fclose(fp);
    return 0;
}

/**************************************************************/
/* float priorProbability (void) */
/* Tay Yi Lin  2103154@sit.singaporetech.edu.sg              */
/*************************************************************/
void priorProbability(void)
{
    //int yAlteredCounter = 0;
    float yAlteredProbability = 0.0;

    for (size_t i = 0; i < 80; i++)
    {
        if (trainingOutput[i][0] == 1.000000)
        {
            yAlteredCounter += 1;
        }
    }
    yNormalCounter = 80 - yAlteredCounter;
    yAlteredProbability = (float)yAlteredCounter / (float)80;

    priorProbability_Altered = yAlteredProbability;
    priorProbability_Normal = 1 - priorProbability_Altered;
}
